<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
    <meta http-equiv="Content-Type" content="text/html;charset=utf-8" />
    <title>Activity Tracker</title>
    <link href="style.css" type="text/css" rel="stylesheet" />
    <link href="jquery-ui.min.css" type="text/css" rel="stylesheet" />
    <link href="jquery-ui.structure.min.css" type="text/css" rel="stylesheet" />
    <link href="jquery-ui.theme.min.css" type="text/css" rel="stylesheet" />
    <link rel="icon" href="tab_icon.png">
    <script src="jquery-3.2.1.js"></script>
    <script src="jquery-ui.min.js"></script>
    <script src="js/jquery.tablesorter.js"></script>
    <script src="js/jquery.tablesorter.widgets.js"></script>
    <script src="js/parsers/parser-ipv6.js"></script>
    <script src="js/jquery.metadata.js"></script>
	
	<style>
		#sortable li {
			display: inline-block;
		}
	</style>

    <script>
	
		var compactDate = false;
		
        function getOption(val, current) {
            return '<option value="' + val + '"' + (current == val ? ' selected>' : '>') + val + '</option>';
        }

        function colorDiff(diff) {
            c = diff.charAt(0);
            if (c == '+') {
                return '<span class="red">' + diff + '</span>';
            }
            if (c == '-') {
                return '<span class="green">' + diff + '</span>';
            }
            return diff;
        }

        function valTime(time) {
            res = time.split(":");
            if (res.length == 2) {
                return 60 * parseInt(res[0]) + parseInt(res[1]);
            }
            return 3600 * parseInt(res[0]) + 60 * parseInt(res[1]) + parseInt(res[2]);
        }

        function comp(t1, t2, tt) {
            if (t1 < t2) {
                return '<span class="green">' + tt + '</span>';
            }
            if (t1 == t2) {
                return tt;
            }
            return '<span class="red">' + tt + '</span>';
        }

        function compGr(t1, t2) {
            if (t1 > t2) {
                return '<span class="green">' + t1 + '</span>';
            }
            if (t1 == t2) {
                return t1;
            }
            return '<span class="red">' + t1 + '</span>';
        }

        function comp2(t1, t2) {
            return comp(parseFloat(t2.replace(',', '.')), parseFloat(t1.replace(',', '.')), t1);
        }

        function colorDiff1(tt1, tt2) {
            t1 = valTime(tt1);
            t2 = valTime(tt2);
            return comp(t1, t2, tt1);
        }

        function formatEle(gain, loss) {
            res = '-';
            if (gain > 0 && loss > 0) {
                res = '<span class="green">+' + gain + '</span>/<span class="red">-' + loss + '</span>';
            } else if (gain > 0) {
                res = '<span class="green">+' + gain + '</span>';
            } else if (loss > 0) {
                res = '<span class="red">-' + loss + '</span>';
            }
            return res;
        }

        function formatEleDiff(diff) {
            if (diff == 0) {
                return '0';
            }
            if (diff > 0) {
                return '<span class="green">+' + diff + '</span>';
            }
            return '<span class="red">' + diff + '</span>';
        }

        function round(point) {
            if (Math.abs(point - Math.round(point)) < 1e-3) {
                return Math.round(point);
            }
            return point;
        }
		
		function changeDash(alias, activity, dashboard) {
			if (dashboard == '') {
				return;
			}
			$.ajax({
                url: alias,
                headers: {
                    'Content-Type': 'application/txt',
                    'activity': activity,
                    'dashboard': dashboard,
                },
                method: 'POST',
                dataType: 'text',
                statusCode: {
                    200: function(resp) {
                        $('#infoDialog').html(resp);
                        $('#infoDialog').dialog('option', 'title', 'Status');
                        $('#infoDialog').dialog('open');
                    },
                    401: function(resp) {
                        $('#infoDialog').html('Please sign in!');
                        $('#infoDialog').dialog('option', 'title', 'Not authorized');
                        $('#infoDialog').dialog('open');
                    }
                }
            });
		}

        function initDialogs() {
			$('#createDashboard').dialog({
                autoOpen: false,
                modal: true,
                show: "blind",
                hide: "blind",
                buttons: {
                    "Create": function() {
						$.ajax({
                            url: 'addDash',
                            headers: {
                                'Content-Type': 'application/json',
                                'name': $('#cdName').val()
                            },
                            method: 'POST',
                            dataType: 'text',
                            statusCode: {
                                200: function(resp) {
									initDashboards();
									$('#infoDialog').html(resp);
                                    $('#infoDialog').dialog('option', 'title', 'Status');
                                    $('#infoDialog').dialog('open');
                                },
								401: function(resp) {
									$('#infoDialog').html('Please sign in!');
                                    $('#infoDialog').dialog('option', 'title', 'Not authorized');
                                    $('#infoDialog').dialog('open');
								}
                            }
                        });
						$(this).dialog("close");
                    },
					"Cancel": function() {
                        $(this).dialog("close");
                    }
                },
                width: 450,
                height: 200
            });
			$('#renameDashboard').dialog({
                autoOpen: false,
                modal: true,
                show: "blind",
                hide: "blind",
                buttons: {
                    "Rename": function() {
						var newName = $('#newDashName').val();
						$.ajax({
                            url: 'renameDash',
                            headers: {
                                'Content-Type': 'application/json',
                                'name': $('#dashboard' + currentDash).attr('name'),
								'newName': newName
                            },
                            method: 'POST',
                            dataType: 'text',
                            statusCode: {
                                200: function(resp) {
									initDashboards();
									$('#infoDialog').html(resp);
                                    $('#infoDialog').dialog('option', 'title', 'Status');
                                    $('#infoDialog').dialog('open');
                                },
								401: function(resp) {
									$('#infoDialog').html('Please sign in!');
                                    $('#infoDialog').dialog('option', 'title', 'Not authorized');
                                    $('#infoDialog').dialog('open');
								}
                            }
                        });
						$(this).dialog("close");
                    },
					"Cancel": function() {
                        $(this).dialog("close");
                    }
                },
                width: 450,
                height: 200
            });
			$('#removeDashboard').dialog({
                autoOpen: false,
                modal: true,
                show: "blind",
                hide: "blind",
                buttons: {
                    "Remove": function() {
						$.ajax({
                            url: 'removeDash',
                            headers: {
                                'Content-Type': 'application/json',
                                'name': $('#dashboard' + currentDash).attr('name')
                            },
                            method: 'POST',
                            dataType: 'text',
                            statusCode: {
                                200: function(resp) {
									currentDash = 0;
									initDashboards();
									fetch();
									$('#infoDialog').html(resp);
                                    $('#infoDialog').dialog('option', 'title', 'Status');
                                    $('#infoDialog').dialog('open');
                                },
								401: function(resp) {
									$('#infoDialog').html('Please sign in!');
                                    $('#infoDialog').dialog('option', 'title', 'Not authorized');
                                    $('#infoDialog').dialog('open');
								}
                            }
                        });
						$(this).dialog("close");
                    },
					"Cancel": function() {
                        $(this).dialog("close");
                    }
                },
                width: 450,
                height: 200
            });
            $('#infoDialog').dialog({
                autoOpen: false,
                modal: true,
                show: "blind",
                hide: "blind",
                buttons: {
                    "OK": function() {
                        $(this).dialog("close");
                    }
                },
                width: 300,
                height: 200
            });
            $('#login').dialog({
                autoOpen: false,
                modal: true,
                show: "blind",
                hide: "blind",
                buttons: {
                    "Login": function() {
                        $.ajax({
                            url: 'login',
                            headers: {
                                'Content-Type': 'application/json',
                                'User': $('#loginUser').val(),
                                'Password': $('#loginPassword').val()
                            },
                            method: 'POST',
                            dataType: 'json',
                            statusCode: {
                                200: function(xhr) {
                                    $('#infoDialog').html('Logged in!');
                                    $('#infoDialog').dialog('option', 'title', 'Status');
                                    $('#infoDialog').dialog('open');
                                    $('#loginButton').prop("disabled",true);
                                    $('#loginButton').text("Authorized");
									$('#loginButton').css({'cursor': 'default'});
                                },
                                401: function(xhr) {
                                    $('#infoDialog').html('Please sign in!');
                                    $('#infoDialog').dialog('option', 'title', 'Not authorized');
                                    $('#infoDialog').dialog('open');
                                },
                                500: function(xhr) {
                                    $('#infoDialog').html('Internal server error :(');
                                    $('#infoDialog').dialog('option', 'title', 'Error');
                                    $('#infoDialog').dialog('open');
                                }
                            }
                        });
                        $(this).dialog("close");
                    },
                    "Cancel": function() {
                        $(this).dialog("close");
                    }
                },
                width: 450,
                height: 250
            });
            $('#editable').dialog({
                autoOpen: false,
                modal: true,
                show: "blind",
                hide: "blind",
                buttons: {
                    "Revert modifications": function() {
                        $.ajax({
                            url: 'revert',
                            headers: {
                                'Content-Type': 'application/json',
                                'File': $('#editable').attr('genby')
                            },
                            method: 'POST',
                            dataType: 'json',
                            statusCode: {
                                200: function(xhr) {
									$('#infoDialog').html('Activity modified!');
									$('#infoDialog').dialog('option', 'title', 'Status');
									$('#infoDialog').dialog('open');
                                    getBest();
                                    fetch();
                                },
                                401: function(xhr) {
                                    $('#infoDialog').html('Please sign in!');
                                    $('#infoDialog').dialog('option', 'title', 'Not authorized');
                                    $('#infoDialog').dialog('open');
                                },
                                400: function(xhr) {
                                    $('#infoDialog').html('Wrong data!');
                                    $('#infoDialog').dialog('option', 'title', 'Error');
                                    $('#infoDialog').dialog('open');
                                }
                            }
                        });
                        $(this).dialog("close");
                    },
                    "Modify": function() {
						dashAdd = $('#addToDash option:selected').val();
						dashRem = $('#remFromDash option:selected').val();
						changeDash('addToDash', $('#editable').attr('genby'), dashAdd);
						changeDash('removeFromDash', $('#editable').attr('genby'), dashRem);
                        $.ajax({
                            url: 'editActivity',
                            headers: {
                                'Content-Type': 'application/json',
                                'File': $('#editable').attr('genby'),
                                'Name': encodeURIComponent($('#chooseName').val()),
                                'Type': $('#chooseType').val(),
                                'actDist': $('#actDist').val(),
                                'actTime': $('#actTime').val(),
                                'actGain': $('#actGain').val(),
                                'actLoss': $('#actLoss').val(),
                                'garminLink': $('#chooseGarmin').val(),
                                'ccLink': $('#chooseCC').val(),
                                'photosLink': $('#choosePhotos').val()
                            },
                            method: 'POST',
                            dataType: 'json',
                            statusCode: {
                                200: function(xhr) {
									$('#infoDialog').html('Activity Modified!');
									$('#infoDialog').dialog('option', 'title', 'Status');
									$('#infoDialog').dialog('open');
                                    getBest();
                                    fetch();
                                },
                                401: function(xhr) {
                                    $('#infoDialog').html('Please sign in!');
                                    $('#infoDialog').dialog('option', 'title', 'Not authorized');
                                    $('#infoDialog').dialog('open');
                                },
                                400: function(xhr) {
                                    $('#infoDialog').html('Wrong data!');
                                    $('#infoDialog').dialog('option', 'title', 'Error');
                                    $('#infoDialog').dialog('open');
                                }
                            }
                        });
                        $(this).dialog("close");
                    }
                },
				width: Math.min($(window).width() * 0.7, 600),
                height: Math.min($(window).height() * 0.85, 750),
                create: function(event) {
                    $(event.target).parent().css({
                        'position': 'fixed',
                        "left": 70,
                        "top": 140
                    });
                }
            });
            $('#removable').dialog({
                autoOpen: false,
                modal: true,
                show: "blind",
                hide: "blind",
                buttons: {
                    "Remove": function() {
                        $.ajax({
                            url: 'deleteActivity',
                            headers: {
                                'Content-Type': 'application/json',
                                'File': $('#removable').attr('genby')
                            },
                            method: 'POST',
                            dataType: 'json',
                            statusCode: {
                                200: function(xhr) {
									$('#infoDialog').html('Activity removed!');
									$('#infoDialog').dialog('option', 'title', 'Status');
									$('#infoDialog').dialog('open');
                                    getBest();
                                    fetch();
                                },
                                401: function(xhr) {
                                    $('#infoDialog').html('Please sign in!');
                                    $('#infoDialog').dialog('option', 'title', 'Not authorized');
                                    $('#infoDialog').dialog('open');
                                },
                                400: function(xhr) {
                                    $('#infoDialog').html('Name must not be empty!');
                                    $('#infoDialog').dialog('option', 'title', 'Error');
                                    $('#infoDialog').dialog('open');
                                }
                            }
                        });
                        $(this).dialog("close");
                    }
                },
                width: Math.min($(window).width() * 0.4, 400),
                height: Math.min($(window).height() * 0.4, 300),
                create: function(event) {
                    $(event.target).parent().css({
                        'position': 'fixed',
                        "left": 70,
                        "top": 140
                    });
                }
            });
            $('#comparable').dialog({
                autoOpen: false,
                modal: true,
                show: "blind",
                hide: "blind",
                buttons: {
                    "Compare": function() {
                        $.ajax({
                            url: 'compare',
                            method: 'POST',
                            dataType: 'json',
                            headers: {
                                'Content-Type': 'application/json',
                                'file1': $('#comparable').attr('file1'),
                                'file2': $('#selectComp').find(':selected').attr('genby')
                            },
                            statusCode: {
                                200: function(data) {
                                    index = $('#selectComp option:selected').index() + 1;
                                    general = data['general'];
                                    times = data['times'];
                                    tt = '';
                                    $.each(times, function(i, sp) {
                                        tt += '<tr><td><strong>' + round(sp['point']) + '</strong></td><td>' + colorDiff1(sp['time1'], sp['time2']) + '</td><td>' + colorDiff1(sp['time2'], sp['time1']) + '</td><td>' + colorDiff(sp['currentDiff']) + '</td><td>' + colorDiff(sp['totalDiff']) + '</td></tr>';
                                    });
                                    $('#selectComp :nth-child(' + index + ')').prop('selected', true);
									f1 = $('#comparable').attr('file1');
									if (f1.endsWith(".gpx")) {
										f1 = f1.substring(0, f1.length - 4);
									}
									f2 = $('#selectComp').find(':selected').attr('genby');
									if (f2.endsWith(".gpx")) {
										f2 = f2.substring(0, f2.length - 4);
									}
                                    var extLinkComp = '<hr><a href="compare?a1=' + f1 + '&a2=' + f2 + '" target="_blank"><input type="image" src="extview-icon.png" width="60" height="60" /></a>';
                                    $('#compareResults').html(extLinkComp + '<hr><table class="highlightOnly"><thead><th>Stat</th><th>' + decodeURIComponent(general['name1']) + ' ' + general['date1'] + '</th><th>' + decodeURIComponent(general['name2']) + ' ' + general['date2'] + '</th></thead><tbody>' +
                                        '<tr><td>Date</td><td>' + general['date1'] + '</td><td>' + general['date2'] + '</td></tr><tr><td>Distance</td><td>' + comp2(general['dist1'], general['dist2']) + '</td><td>' + comp2(general['dist2'], general['dist1']) + '</td></tr>' +
                                        '<tr><td>Time</td><td>' + colorDiff1(general['time1'], general['time2']) + '</td><td>' + colorDiff1(general['time2'], general['time1']) + '</td></tr>' +
                                        '<tr><td>Speed</td><td>' + comp2(general['speed1'], general['speed2']) + '</td><td>' + comp2(general['speed2'], general['speed1']) + '</td></tr><tr><td>Elev gain</td><td>' + general['elePos1'] + '</td><td>' + general['elePos2'] + '</td></tr>' +
                                        '<tr><td>Elev loss</td><td>' + general['eleNeg1'] + '</td><td>' + general['eleNeg2'] + '</td></tr>' +
                                        '<tr><td>Running|>9km/h| time</td><td>' + colorDiff1(general['timeRunning1'], general['timeRunning2']) + '</td><td>' + colorDiff1(general['timeRunning2'], general['timeRunning1']) + '</td></tr>' +
                                        '<tr><td>Running|>9km/h| distance</td><td>' + comp2(general['distRunning1'], general['distRunning2']) + '</td><td>' + comp2(general['distRunning2'], general['distRunning1']) + '</td></tr>' +
                                        '<tr><td>Running|>9km/h| elev gain</td><td>' + compGr(general['eleRunningPos1'], general['eleRunningPos2']) + '</td><td>' + compGr(general['eleRunningPos2'], general['eleRunningPos1']) + '</td></tr>' +
                                        '<tr><td>Running|>9km/h| elev loss</td><td>' + general['eleRunningNeg1'] + '</td><td>' + general['eleRunningNeg2'] + '</td></tr>' + '</tbody></table>');
                                    $('#compareResults').append('<span class="highlight"><h2>Splits</h2><table><thead><th>Point(km)</th><th>' + decodeURIComponent(general['name1']) + ' ' + general['date1'] + '</th><th>' + decodeURIComponent(general['name2']) + ' ' + general['date2'] + '</th><th>Segment diff</th><th>Total diff</th></thead><tbody>' + tt + '</tbody></table></span>');
                                },
                                400: function(xhr) {
                                    $('#infoDialog').html('Activities may be removed :(');
                                    $('#infoDialog').dialog('option', 'title', 'Error');
                                    $('#infoDialog').dialog('open');
                                }
                            }
                        });
                    },
                    "Close": function() {
                        $(this).dialog("close");
                    }
                },
                width: Math.min(800, $(window).width() * 0.8),
                height: Math.min(800, $(window).height() * 0.8),
                create: function(event) {
                    $(event.target).parent().css({
                        'position': 'fixed',
                        "left": 50,
                        "top": 150
                    });
                }
            });
            $('#bestSplits').dialog({
                autoOpen: false,
                modal: true,
                show: "blind",
                hide: "blind",
                buttons: {
                    "Close": function() {
                        $(this).dialog("close");
                    }
                },
                width: Math.min($(window).width() * 0.85, 850),
                height: Math.min($(window).height() * 0.85, 800),
                create: function(event) {
                    $(event.target).parent().css({
                        'position': 'fixed',
                        "left": 50,
                        "top": 150
                    });
                }
            });
            $('#mTotals').dialog({
                autoOpen: false,
                modal: true,
                show: "blind",
                hide: "blind",
                buttons: {
                    "Close": function() {
                        $(this).dialog("close");
                    }
                },
                width: Math.min(400, $(window).width() * 0.8),
                height: Math.min($(window).height() * 0.85, 900),
                create: function(event) {
                    $(event.target).parent().css({
                        'position': 'fixed',
                        "left": 50,
                        "top": 150
                    });
                }
            });
			$('#wTotals').dialog({
                autoOpen: false,
                modal: true,
                show: "blind",
                hide: "blind",
                buttons: {
                    "Close": function() {
                        $(this).dialog("close");
                    }
                },
                width: Math.min(600, $(window).width() * 0.8),
                height: Math.min($(window).height() * 0.85, 900),
                create: function(event) {
                    $(event.target).parent().css({
                        'position': 'fixed',
                        "left": 50,
                        "top": 150
                    });
                }
            });
			$('#presetsDlg').dialog({
                autoOpen: false,
                modal: true,
                show: "blind",
                hide: "blind",
                buttons: {
                    "Save": function() {
						name = encodeURIComponent($('#newPresetName').val());
						period = $('input[name=selectPeriod]:checked').attr('id');
						records = parseInt($('input[name=selectLast]:checked').attr('cap'));
						ds = $('#dtStart').datepicker('getDate');
						de = $('#dtEnd').datepicker('getDate');
						nf = encodeURIComponent($('#searchName').val());
						$.ajax({
                            url: 'saveFilter',
                            headers: {
                                'Content-Type': 'application/json',
                                'name': name,
								'run': $('#checkbox-1').prop('checked'),
								'trail': $('#checkbox-2').prop('checked'),
								'uphill': $('#checkbox-3').prop('checked'),
								'hike': $('#checkbox-4').prop('checked'),
								'walk': $('#checkbox-5').prop('checked'),
								'other': $('#checkbox-6').prop('checked'),
								'dateOpt': parseInt(period[period.length - 1]) - 1,
								'startDate': ds ? (ds.getMonth() + 1) + '/' + ds.getDate() + '/' + ds.getFullYear() : '',
								'endDate': de ? (de.getMonth() + 1) + '/' + de.getDate() + '/' + de.getFullYear() : '',
								'records': records,
								'pattern': nf,
								'dmin': $('#spinnerMin').val(),
								'dmax': $('#spinnerMax').val(),
								'dashboard': $('#dashboard' + currentDash).attr('name')
                            },
                            method: 'POST',
                            dataType: 'text',
                            statusCode: {
                                200: function(resp) {
									$('#infoDialog').html(resp);
                                    $('#infoDialog').dialog('option', 'title', 'Status');
                                    $('#infoDialog').dialog('open');
									getPresets();
                                },
								401: function(resp) {
									$('#infoDialog').html('Please sign in!');
                                    $('#infoDialog').dialog('option', 'title', 'Not authorized');
                                    $('#infoDialog').dialog('open');
								}
                            }
                        });
						$(this).dialog("close");
                    },
					"Cancel": function() {
                        $(this).dialog("close");
                    }
                },
                width: 450,
                height: 200
            });
			$('#renamePresetDlg').dialog({
                autoOpen: false,
                modal: true,
                show: "blind",
                hide: "blind",
                buttons: {
                    "Rename": function() {
						$.ajax({
                            url: 'renameFilter',
                            headers: {
                                'Content-Type': 'application/json',
                                'name': $('#selectPreset').find(':selected').val(),
								'newName': $('#setPresetName').val()
                            },
                            method: 'POST',
                            dataType: 'text',
                            statusCode: {
                                200: function(resp) {
									$('#infoDialog').html(resp);
                                    $('#infoDialog').dialog('option', 'title', 'Status');
                                    $('#infoDialog').dialog('open');
									getPresets();
                                },
								401: function(resp) {
									$('#infoDialog').html('Please sign in!');
                                    $('#infoDialog').dialog('option', 'title', 'Not authorized');
                                    $('#infoDialog').dialog('open');
								}
                            }
                        });
						$(this).dialog("close");
                    },
					"Cancel": function() {
                        $(this).dialog("close");
                    }
                },
                width: 450,
                height: 250
            });
			$('#removePresetDlg').dialog({
                autoOpen: false,
                modal: true,
                show: "blind",
                hide: "blind",
                buttons: {
                    "Remove": function() {
						$.ajax({
                            url: 'removeFilter',
                            headers: {
                                'Content-Type': 'application/json',
                                'name': $('#selectPresetRem').find(':selected').val()
                            },
                            method: 'POST',
                            dataType: 'text',
                            statusCode: {
                                200: function(resp) {
									$('#infoDialog').html(resp);
                                    $('#infoDialog').dialog('option', 'title', 'Status');
                                    $('#infoDialog').dialog('open');
									getPresets();
                                },
								401: function(resp) {
									$('#infoDialog').html('Please sign in!');
                                    $('#infoDialog').dialog('option', 'title', 'Not authorized');
                                    $('#infoDialog').dialog('open');
								}
                            }
                        });
						$(this).dialog("close");
                    },
					"Cancel": function() {
                        $(this).dialog("close");
                    }
                },
                width: 450,
                height: 250
            });
        }

        function initSecondaryDialogs() {
            $('#overall').dialog({
                autoOpen: false,
                modal: true,
                show: "blind",
                hide: "blind",
                buttons: {
                    "Close": function() {
                        $(this).dialog("close");
                    }
                },
                width: Math.min(400),
                height: Math.min(450),
                create: function(event) {
                    $(event.target).parent().css({
                        'position': 'fixed',
                        "left": 50,
                        "top": 150
                    });
                }
            });
            $('#bestOf').dialog({
                autoOpen: false,
                modal: true,
                show: "blind",
                hide: "blind",
                buttons: {
                    "Close": function() {
                        $(this).dialog("close");
                    }
                },
                width: Math.min(400),
                height: Math.min(600),
                create: function(event) {
                    $(event.target).parent().css({
                        'position': 'fixed',
                        "left": 50,
                        "top": 150
                    });
                }
            });
        }
		
		function initPresets(presets) {
			allPresetsHtml = '<ul id="sortable">';
			$.each(presets, function(i, item) {
				name = decodeURIComponent(item['name']);
				allPresetsHtml += '<li class="presetButton" id="preset' + name + '">' + name + '</li>';
			});
			$('#allPresets').html(allPresetsHtml + '</ul>');
			$("#sortable").sortable();
			$("#sortable").disableSelection();
			$.each(presets, function(i, item) {
				name = decodeURIComponent(item['name']);
				$('#preset' + name).click(function() {
					if ($('#search').button("option", "disabled")) {
						return;
					}
					$(this).addClass('selectedDash');
					$('#searchName').val(decodeURIComponent(item['pattern']));
					for (i = 1; i < 7; ++i) {
						$('#checkbox-' + i).prop('checked', false).change();
					}
					if (item['run']) {
						$('#checkbox-1').prop('checked', true).change();
					}
					if (item['trail']) {
						$('#checkbox-2').prop('checked', true).change();
					}
					if (item['uphill']) {
						$('#checkbox-3').prop('checked', true).change();
					}
					if (item['hike']) {
						$('#checkbox-4').prop('checked', true).change();
					}
					if (item['walk']) {
						$('#checkbox-5').prop('checked', true).change();
					}
					if (item['other']) {
						$('#checkbox-6').prop('checked', true).change();
					}
					sd = item['startDate'];
					if (sd.length > 0) {
						si = sd.indexOf('/');
						if (si == -1) {
							$('#radio-' + (parseInt(sd) + 1)).prop('checked', true).change();
						} else {
							$('#radio-7').prop('checked', true).change();
							$('#dtStart').val(sd);
						}
					} else {
						$('#dtEnd').val('');
					}
					$('#dtEnd').val(item['endDate']);
					if (item['minDist'] > 0) {
						$('#spinnerMin').val(item['minDist']);
					} else {
						$('#spinnerMin').val('');
					}
					if (item['maxDist'] < 2147483647) {
						$('#spinnerMax').val(item['maxDist']);
					} else {
						$('#spinnerMax').val('');
					}
					rec = item['top'];
					if (rec == 10 || rec == 20 || rec == 50 || rec == 100) {
						$('#l-' + rec).prop('checked', true).change();
					} else {
						$('#l-inf').prop('checked', true).change();
					}
					fetchAfterDashClick = false;
					$('button[name="' + item['dashboard'] + '"]').click();
					fetchAfterDashClick = true;
					fetch();
				});
			});
		}
		
		function getPresets() {
			$.ajax({
                url: 'getFilters',
                method: 'POST',
                dataType: 'json',
                headers: {
                    'Content-Type': 'application/json'
                },
                statusCode: {
                    200: function(data) {
						initPresets(data['presets']);
					}
				}
			});
		}

        function initContent(data) {
            itemsDS = [];
            $('#dataHolder').html('');
            all = data['activities'];
            if (all.length == 0) {
				flt = data['filter'].replace('Showing', 'Looking for');
                $('#ht').html('No activities found<p>' + flt);
                $('#runs tbody').html('');
                $('#runs').trigger('update');
                $('#runs').tablesorter();
                $('#runs').hide();
                $('#overall').hide();
                return false;
            }
            $('#overall').show();
            $('#runs').show();
            $('#ht').html(data['filter'] + '<p>');
            $('#overall tbody').html('<tr><td>Distance</td><td>' + data['totalDistance'] + " km</td><tr><td>Time</td><td>" + data['totalTime'] + '</td><tr><td>Average speed</td><td>' + data['avgSpeed'] + ' km/h</td></tr>' +
                '<tr><td>Average distance</td><td>' + data['avgDist'] + ' km</td></tr>' + 
				'<tr><td>Elevation gain</td><td>' + data['elePos'] + ' m</td></tr><tr><td>Elevation loss</td><td>' + data['eleNeg'] + ' m</td></tr><tr><td>Running distance(>9km/h)</td><td>' + data['totalRunDist'] + ' km</td></tr>');
            initMonthlyTotals(data['mtotals']);
			initWeeklyTotals(data['wtotals']);
            runsHtml = '';
            optsAll = '';
            var dialog = {
                autoOpen: false,
                modal: false,
                show: "blind",
                hide: "blind",
                buttons: {
                    "Close": function() {
                        $(this).dialog("close");
                    }
                },
                width: Math.min($(window).width() * 0.7, 600),
                height: Math.min($(window).height() * 0.85, 800),
                create: function(event) {
                    $(event.target).parent().css({
                        'position': 'fixed',
                        "left": 50,
                        "top": 150
                    });
                }
            };
            var crun = 0;
            var ctrail = 0;
            var cup = 0;
            var chike = 0;
            var cwalk = 0;
            var coth = 0;
            $.each(all, function(i, item) {
                if (item['type'] == 'Running') {
                    ++crun;
                } else if (item['type'] == 'Trail') {
                    ++ctrail;
                } else if (item['type'] == 'Uphill') {
                    ++cup;
                } else if (item['type'] == 'Hiking') {
                    ++chike;
                } else if (item['type'] == 'Walking') {
                    ++cwalk;
                } else if (item['type'] == 'Other') {
                    ++coth;
                }
                var isMod = item['isModified'] == 'y';
				dateStr = item['date'];
				if (compactDate) {
					dateStr = item['day'] + '.' + (item['month'] + 1) + '.' + (item['year'] - 2000);
				}
                runsHtml += '<tr><td>' + (i + 1) + '</td><td><div id="date' + i + '">' + dateStr + '</div></td><td><div class="runitem" id="item' + i + '">' + decodeURIComponent(item['name']) + (isMod ? '*' : '') +
                    '</div></td><td><div id="type' + i + '">' + item['type'] + '</div></td><td>' +
                    item['dist'] + '</td><td>' + item['timeTotal'] + '</td><td>' + item['avgPace'] + '</td><td>' + item['avgSpeed'] + '</td>' +
                    '<td>' + formatEle(item['eleTotalPos'], item['eleTotalNeg']) + '</td>' +
                    '<td><div id="edit' + i + '" class="ui-icon ui-icon-pencil ui-state-hover runitem"></div>' +
                    '<div id="compare' + i + '" class="ui-icon ui-icon-arrowthick-2-e-w ui-state-hover runitem"></div>' +
                    '<div id="trash' + i + '" class="ui-icon ui-icon-trash ui-state-hover runitem"></div></td></tr>';
                $('#dataHolder').append('<div style="display: none;" id="data' + i + '"></div>');
                $('#dataHolder').append('<div style="display: none;" id="ui' + i + '"></div>');
                distr = item['speedDist'];
                tableHtml = '<span class="highlight"><table><thead><th>Range</th><th>Time</th><th>Distance</th><th>Gain</th><th>Loss</th></thead><tbody>';
                $.each(distr, function(i, diap) {
                    tableHtml += '<tr><td><strong>' + diap['range'] + ' km/h</strong></td><td>' + diap['time'] + '</td><td>' + diap['dist'] + '</td><td><span class="green">' + diap['elePos'] + '</span></td><td><span class="red">' + diap['eleNeg'] + '</span></td></tr>';
                });
                tableHtml += '</tbody></table></span>';
                splits = item['splits'];
                splitHtml = '<span class="highlight"><table><thead><th>Point(km)</th><th>Pace</th><th>Avg speed</th><th>Diff</th><th>Total time</th><th>Acc speed</th></thead><tbody>';
                $.each(splits, function(i, sp) {
                    splitHtml += '<tr><td><strong>' + round(sp['total']) + '</strong></td><td>' + sp['pace'] + '</td><td>' + sp['speed'] + '</td><td>' + formatEleDiff(sp['ele']) + '</td><td>' + sp['timeTotal'] +
                        '</td><td>' + sp['accumSpeed'] + '</td></tr>';
                });
                splitHtml += '</tbody></table></span>';
                filename = item['genby'].endsWith('.gpx') ? item['genby'].substring(0, item['genby'].length - 4) : item['genby'];
                itemsDS.push(function() {
                    $('#ui' + i).dialog(dialog);
                    $('#ui' + i).html($('#data' + i).html());
                    $('#ui' + i).dialog('option', 'title', 'Details ' + $('#item' + i).text());
                    $('#ui' + i).dialog('open');
                });
                var origData = item['origData'];
                var extLinks = '<a href="' + filename + '" target="_blank"><input type="image" src="extview-icon.png" width="60" height="60" /></a>';
                if (item['garminLink'] != 'none') {
                    extLinks += '<a href="' + item['garminLink'] + '" target="_blank"><input type="image" src="garmin-icon.png" width="60" height="60" /></a>';
                }
                if (item['ccLink'] != 'none') {
                    extLinks += '<a href="' + decodeURIComponent(item['ccLink']) + '" target="_blank"><input type="image" src="relivecc-icon.png" width="60" height="60" /></a>';
                }
                if (item['photosLink'] != 'none') {
                    extLinks += '<a href="' + decodeURIComponent(item['photosLink']) + '" target="_blank"><input type="image" src="photos-icon.png" width="60" height="60" /></a>';
                }
                $('#data' + i).append(extLinks + '<hr><ul><li></li>' + '<table><tbody><tr><td>Date</td><td>' + item['startAt'] + '</td></tr><tr><td>Distance</td><td>' +
                    item['dist'] + (isMod ? '<em> / ' + origData['dist'] + '*</em>' : '') + '</td></tr><tr><td>Total time</td><td>' + item['timeTotal'] + (isMod ? '<em> / ' + origData['timeTotal'] + '*</em>' : '') +
                    '</td></tr><tr><td>Elevation gain</td><td>' +
                    '<span class="green">' + item['eleTotalPos'] + (isMod ? '<em> / ' + origData['eleTotalPos'] + '*</em>' : '') + '</span></td></tr><tr><td>Elevation loss</td><td>' + '<span class="red">' +
                    item['eleTotalNeg'] + (isMod ? '<em> / ' + origData['eleTotalNeg'] + '*</em>' : '') + '</span></td></tr><tr><td>' +
                    'Running|>9km/h| time</td><td>' + (isMod ? '<em>' : '') + item['timeRunning'] + (isMod ? '*</em>' : '') + '</td></tr><tr><td>Running|>9km/h| distance</td><td>' + (isMod ? '<em>' : '') +
                    item['distRunning'] + (isMod ? '*</em>' : '') + '</td></tr><tr><td>Running|>9km/h| elevation gain</td><td>' +
                    '<span class="green">' + (isMod ? '<em>' : '') + item['eleRunningPos'] + (isMod ? '*</em>' : '') + '</span></td></tr><tr><td>Running|>9km/h| elevation loss</td><td>' +
                    '<span class="red">' + (isMod ? '<em>' : '') + item['eleRunningNeg'] + (isMod ? '*</em>' : '') + '</span></td></tr><tr><td>Rest time</td><td>' + (isMod ? '<em>' : '') + item['timeRest'] + (isMod ? '*</em>' : '') +
                    '</td></tr><tr><td>Average speed</td><td>' + item['avgSpeed'] + (isMod ? '<em> / ' + origData['avgSpeed'] + '*</em>' : '') +
                    '</td></tr><tr><td>Average pace</td><td>' + item['avgPace'] + (isMod ? '<em> / ' + origData['avgPace'] + '*</em>' : '') + '</td></tr></tbody></table><hr><li><h3>Speed distribution</h3>' +
                    '</li>' + tableHtml + '</li><hr><li><h3>Splits</h3></li>' + splitHtml + '</ul>');
            });
			var happc = all.length + (all.length != 1 ? ' matches' : ' match');
            var appc = '';
            if (crun > 0) {
                appc += 'Running: ' + crun;
            }
            if (ctrail > 0) {
                appc += (appc.length > 0 ? ', ' : '') + 'Trail: ' + ctrail;
            }
            if (cup > 0) {
                appc += (appc.length > 0 ? ', ' : '') + 'Uphill: ' + cup;
            }
            if (chike > 0) {
                appc += (appc.length > 0 ? ', ' : '') + 'Hiking: ' + chike;
            }
            if (cwalk > 0) {
                appc += (appc.length > 0 ? ', ' : '') + 'Walking: ' + cwalk;
            }
            if (coth > 0) {
                appc += (appc.length > 0 ? ', ' : '') + 'Other: ' + coth;
            }
            if (appc.length > 0) {
                appc = ' |' + appc + '|';
            }
            $('#ht').append(happc + appc);
            $('#runs tbody').html(runsHtml);
            $('#runs').trigger('update');
            $('#runs').trigger("sorton", [
                [
                    [1, 'dates']
                ]
            ]);
            var table = document.getElementById('runs');
            var rowLength = table.rows.length;
            for (var i = 1; i < rowLength; i++) {
                table.rows[i].cells[0].innerHTML = (i).toString();
            }
            $.each(all, function(i, item) {
                optsAll += '<option genby="' + item['genby'] + '" value="#' + (i + 1) + ' ' + $('#item' + i).text() + '">' + $('#item' + i).text() + ' ' + $('#date' + i).text() + '</option>';
            });
            $.each(all, function(i, item) {
                $('#compare' + i).click(function() {
                    $('#comparable').html('Compare with <select id="selectComp">' + optsAll + '</select><div id="compareResults" />');
                    $('#comparable').dialog('option', 'title', 'Compare ' + $('#item' + i).text() + ' ' + $('#date' + i).text());
                    $('#comparable').attr('file1', item['genby']);
                    $('#comparable').dialog('open');
                });
                $('#edit' + i).click(function() {
                    type = $('#type' + i).text();
					optsAdd = '<option value="">---Keep---</option>';
					optsRem = '<option value="">---Keep---</option>';
					dashboards = item['dashboards'];
					for (q = 0; q < dashCount; ++q) {
						name = $('#dashboard' + q).attr('name');
						if (dashboards.indexOf(name) == -1) {
							optsAdd += '<option value="' + name + '">' + name + '</option>';
						} else {
							optsRem += '<option value="' + name + '">' + name + '</option>';
						}
					}
                    $('#editable').html('<table><tbody><tr><td>Name </td><td><input type="text" id="chooseName" value="' + $('#item' + i).text() + '"/></td></tr><tr><td>Type </td><td><select id="chooseType">' + getOption("Running", type) +
                        getOption("Trail", type) + getOption("Uphill", type) + getOption('Hiking', type) + getOption('Walking', type) + getOption('Other', type) + '</select></td>' +
                        '<tr><td>Garmin </td><td><input size="50" type="text" id="chooseGarmin" value="' + (item['garminLink'] != 'none' ? item['garminLink'] : "") + '"/></td></tr>' +
                        '<tr><td>Relive CC </td><td><input size="50" type="text" id="chooseCC" value="' + (item['ccLink'] != 'none' ? decodeURIComponent(item['ccLink']) : "") + '"/></td></tr>' +
                        '<tr><td>Photos </td><td><input size="50" type="text" id="choosePhotos" value="' + (item['photosLink'] != 'none' ? decodeURIComponent(item['photosLink']) : "") + '"/></td></tr>' +
                        '<tr><td>Add to dashboard</td><td><select id="addToDash">' + optsAdd + '</select></td></tr>' + 
						'<tr><td>Remove from dashboard</td><td><select id="remFromDash">' + optsRem + '</select></td></tr></tbody></table>' +
						'<u><h2>Modifications</h2></u><p><h4>Optional. Leave empty to keep old data.</h4>' +
                        '<table><tbody><tr><td>Actual distance</td><td><input type="text" id="actDist" /></td></tr>' +
                        '<tr><td>Actual time(hh:mm:ss)</td><td><input type="text" id="actTime" /></td></tr>' +
                        '<tr><td>Actual elevation gain</td><td><input type="text" id="actGain" /></td></tr>' +
                        '<tr><td>Actual elevation loss</td><td><input type="text" id="actLoss" /></td></tr>' + '</tbody></table>');
                    $('#editable').dialog('option', 'title', 'Edit ' + $('#item' + i).text() + ' ' + $('#date' + i).text());
                    $('#editable').attr('genby', item['genby']);
                    $('#editable').attr('refname', 'item' + i);
                    $('#editable').attr('reftype', 'type' + i);
                    $('#editable').dialog('open');
                });
                $('#trash' + i).click(function() {
                    $('#removable').html('Remove this activity?');
                    $('#removable').dialog('option', 'title', 'Remove ' + $('#item' + i).text() + ' ' + $('#date' + i).text());
                    $('#removable').attr('genby', item['genby']);
                    $('#removable').dialog('open');
                });
            });
            for (i = 0; i < itemsDS.length; ++i) {
                $('#runs tr:eq(' + (i + 1) + ') td:not(:last-child)').click(itemsDS[i]);
            }
            $('#rescanButton').click(function() {
                $.ajax({
                    url: 'rescanActivities',
                    method: 'POST',
                    dataType: 'json',
                    statusCode: {
                        200: function(data) {
                            getBest();
                            fetch();
                            $('#infoDialog').html('Rescan completed!');
                            $('#infoDialog').dialog('option', 'title', 'Action finished');
                            $('#infoDialog').dialog('open');
                        }
                    }
                });
            });
        }

        function fetch() {
            var period = $('input[name=selectPeriod]:checked').attr('id');
            var records = parseInt($('input[name=selectLast]:checked').attr('cap'));
            var ds = $('#dtStart').datepicker('getDate');
            var de = $('#dtEnd').datepicker('getDate');
            var nf = encodeURIComponent($('#searchName').val());
            $('#search').button("option", "disabled", true);
            $.ajax({
                url: 'fetch',
                method: 'POST',
                dataType: 'json',
                headers: {
                    'Content-Type': 'application/json',
                    'run': $('#checkbox-1').prop('checked'),
                    'trail': $('#checkbox-2').prop('checked'),
                    'uphill': $('#checkbox-3').prop('checked'),
                    'hike': $('#checkbox-4').prop('checked'),
                    'walk': $('#checkbox-5').prop('checked'),
                    'other': $('#checkbox-6').prop('checked'),
                    'dateOpt': parseInt(period[period.length - 1]) - 1,
                    'dtStart': ds ? (ds.getMonth() + 1) + '/' + ds.getDate() + '/' + ds.getFullYear() : '',
                    'dtEnd': de ? (de.getMonth() + 1) + '/' + de.getDate() + '/' + de.getFullYear() : '',
                    'records': records,
                    'nameFilter': nf,
                    'dmin': $('#spinnerMin').val(),
                    'dmax': $('#spinnerMax').val(),
					'dashboard': $('#dashboard' + currentDash).attr('name')
                },
                statusCode: {
                    200: function(data) {
						$(".presetButton").removeClass('selectedDash');
                        initContent(data);
                        $('#search').button("option", "disabled", false);
						for (i = 0; i < dashCount; ++i) {
							$('#dashboard' + i).prop("disabled", false);
						}
                    },
                    400: function(data) {
						$(".presetButton").removeClass('selectedDash');
                        $('#infoDialog').html('Invalid distance arguments!');
                        $('#infoDialog').dialog('option', 'title', 'Bad data');
                        $('#infoDialog').dialog('open');
                        $('#search').button("option", "disabled", false);
						for (i = 0; i < dashCount; ++i) {
							$('#dashboard' + i).prop("disabled", false);
						}
                    }
                }
            });
        }

        function disableDates() {
            $('#dtStart').datepicker('disable');
            $('#dtEnd').datepicker('disable');
        }

        function getStat(data, opt) {
            if (data[opt]) {
                return data[opt];
            }
            return opt == 'ach' ? 'Locked' : '---';
        }

        function getBest() {
            initSplitsBest();
            $.ajax({
                url: 'best',
                method: 'POST',
                dataType: 'json',
                headers: {
                    'Content-Type': 'application/json'
                },
                statusCode: {
                    200: function(data) {
                        var farthest = data['longest'];
                        var fastest = data['fastest'];
                        var maxAsc = data['maxAsc'];
                        var k1 = data['1K'];
                        var k25 = data['2K5'];
                        var k5 = data['5K'];
                        var k10 = data['10K'];
                        var semi = data['21K'];
                        var k30 = data['30K'];
                        var marathon = data['42K'];
                        $('#bestOf tbody').html('<tr><td>Farthest</td><td>' + getStat(farthest, 'ach') + '</td><td>' + getStat(farthest, 'when') + '</td></tr>' +
                            '<tr><td>Fastest</td><td>' + getStat(fastest, 'ach') + '</td><td>' + getStat(fastest, 'when') + '</td></tr>' +
                            '<tr><td>Max ascent</td><td>' + getStat(maxAsc, 'ach') + '</td><td>' + getStat(maxAsc, 'when') + '</td></tr>' +
                            '<tr><td>1K</td><td>' + getStat(k1, 'ach') + '</td><td>' + getStat(k1, 'when') + '</td></tr>' +
                            '<tr><td>2.5K</td><td>' + getStat(k25, 'ach') + '</td><td>' + getStat(k25, 'when') + '</td></tr>' +
                            '<tr><td>5K</td><td>' + getStat(k5, 'ach') + '</td><td>' + getStat(k5, 'when') + '</td></tr>' +
                            '<tr><td>10K</td><td>' + getStat(k10, 'ach') + '</td><td>' + getStat(k10, 'when') + '</td></tr>' +
                            '<tr><td>Half-marathon</td><td>' + getStat(semi, 'ach') + '</td><td>' + getStat(semi, 'when') + '</td></tr>' +
                            '<tr><td>30K</td><td>' + getStat(k30, 'ach') + '</td><td>' + getStat(k30, 'when') + '</td></tr>' +
                            '<tr><td>Marathon</td><td>' + getStat(marathon, 'ach') + '</td><td>' + getStat(marathon, 'when') + '</td></tr>');
                    }
                }
            });
        }

        function initSplitsBest() {
            $.ajax({
                url: 'bestSplits',
                method: 'POST',
                dataType: 'json',
                headers: {
                    'Content-Type': 'application/json'
                },
                statusCode: {
                    200: function(data) {
                        $('#bestSplits').dialog('option', 'title', 'Best split times dy distance');
                        totals = data['totals'];
                        splits = '';
                        $.each(totals, function(i, item) {
                            splits += '<tr><td><strong>' + item['point'] + '</strong></td><td>' + item['ach'] + '</td><td>' + decodeURIComponent(item['name']) + '</td><td>' + item['date'] + '</td>' +
                                '<td>' + item['pace'] + '</td><td>' + item['speed'] + '</td></tr>';
                        });
                        $('#bestSplits').html('<span class="highlight"><table><thead><tr><th>Distance</th><th>Best time</th><th>Name</th><th>Date</th>' +
                            '<th>Pace</th><th>Speed</th></tr></thead><tbody>' + splits + '</tbody></table></span>');
                    }
                }
            });
        }
		
		function getWTable(item) {
            return '<table class="innermtt"><tbody><tr><td>Running&nbsp;</td><td>' + item['r'] + '(' + item['countr'] + ')</td></tr><tr><td>Trail&nbsp;</td><td>' + item['t'] +
				'(' + item['countt'] + ')</td></tr>' +
                '<tr><td>Uphill&nbsp;</td><td>' + item['u'] + '(' + item['countu'] + ')</td></tr><tr><td>Hiking&nbsp;</td><td>' + item['h'] + '(' + item['counth'] +
                ')</td></tr><tr><td><strong>Run&Trail&nbsp;</strong></td><td><strong>' + item['rt'] + '(' + item['countrt'] + ')</strong></td></tr></tbody></table>';
        }

        function initMonthlyTotals(data) {
            $('#mTotals').dialog('option', 'title', 'Total distance by month');
            tableHtml = '<table id="mtt" align="center"><tbody>';
            $.each(data, function(i, item) {
                tableHtml += '<tr class="border_bottom"><td>' + item['name'] + '</td><td>' + getWTable(item) + '</td></tr>';
            });
            tableHtml += '</tbody></table>';
            $('#mTotals').html(tableHtml);
        }
		
		function initWeeklyTotals(data) {
			$('#wTotals').dialog('option', 'title', 'Total distance by week');
			buttonHtml = '';
            tableHtml = '<table id="wtt" align="center"><tbody>';
            $.each(data, function(i, item) {
				intData = item['data'];
				wy = item['year'];
				buttonHtml += i > 0 ? '<a href="#shortcut' + wy + '"><button id=wy"' + wy + '">' + wy + '</button></a>' : '';
				firstEl = i > 0 ? '<div id="shortcut' + wy + '"/>' : '';
				$.each(intData, function(j, wdata) {
					tableHtml += '<tr class="border_bottom"><td>' + firstEl + wy + ' ' + wdata['info'] + '</td><td>' + getWTable(wdata) + '</td></tr>';
					firstEl = '';
				});
            });
            tableHtml += '</tbody></table>';
            $('#wTotals').html(buttonHtml + '<hr>' + tableHtml);
		}

        function checkCookieVal(cookieVal) {
            $.ajax({
                url: 'checkCookie',
                method: 'POST',
                dataType: 'json',
                statusCode: {
                    200: function(xhr) {
                        $('#loginButton').prop("disabled",true);
                        $('#loginButton').text('Authorized');
						$('#loginButton').css({'cursor': 'default'});
                    },
                    401: function(xhr) {
                        $('#loginButton').prop("disabled",false);
                    }
                }
            });
        }
		
		var dashCount = 0;
		var currentDash = 0;
		var fetchAfterDashClick = true;

        function initDashboards() {
            $.ajax({
                url: 'getDash',
                method: 'POST',
                dataType: 'json',
                statusCode: {
                    200: function(data) {
                        arr = data['dashboards'];
                        dashHtml = '';
						dashCount = arr.length;
                        $.each(arr, function(i, item) {
                            dashHtml += '<button class="dashButton" id="dashboard' + i + '">' + item + '</button>';
                        });
                        $('#allDash').html(dashHtml);
						$.each(arr, function(i, item) {
                            $('#dashboard' + i).addClass(i == currentDash ? 'selectedDash' : 'notSelectedDash');
							$('#dashboard' + i).attr('name', item);
							$('#dashboard' + i).click(function() {
								if (currentDash == i) {
									return;
								}
								if ($('#search').button("option", "disabled")) {
									return;
								}
								currentDash = i;
								$('#dashboard' + i).addClass('selectedDash');
								$('#dashboard' + i).removeClass('notSelectedDash');
								for (j = 0; j < dashCount; ++j) {
									if (j != i) {
										$('#dashboard' + j).prop("disabled",true);
										$('#dashboard' + j).addClass('notSelectedDash');
										$('#dashboard' + j).removeClass('selectedDash');
									}
								}
								$('#runs').hide();
								$('#ht').html('Fetching activities...');
								if (fetchAfterDashClick) {
									$('#checkbox-1').prop('checked', true).change();
									$('#checkbox-2').prop('checked', true).change();
									$('#checkbox-3').prop('checked', true).change();
									$('#checkbox-4').prop('checked', true).change();
									$('#radio-6').prop('checked', true).change();
									$('#spinnerMin').val('');
									$('#spinnerMax').val('');
									$('#l-inf').prop('checked', true).change();
									$('#searchName').val('');
									fetch();
								}
							});
                        });
                    }
                }
            });
        }

        function checkWidth() {
			wid = $(window).width();
            if (wid < 1200) {
                initSecondaryDialogs();
                $('#bestOfWrap').append('<button id="bestOfBtn">Best achievements</button>');
                $('#bestOfBtn').button();
                $('#overallWrap').append('<button id="overallBtn">Selection totals</button>');
                $('#overallBtn').button();
                $('#bestOf').dialog('option', 'title', 'Best achievements');
                $('#overall').dialog('option', 'title', 'Selection totals');
                $('#bestOfBtn').click(function() {
                    $('#bestOf').dialog('open');
                });
                $('#overallBtn').click(function() {
                    $('#overall').dialog('open');
                });
                $('#titleTotals').remove();
                $('#titleBest').remove();
            }
			if (wid < 1800) {
				compactDate = true;
				if (wid >= 1600) {
					$('#runs').css({'width': '85%'});
				}
			}
			if (wid >= 1400 && wid < 1600) {
				$('#runs').css({'width': '90%'});
			}
			if (wid < 1400) {
				$('#runs').css({'width': '95%'});
			}
        }

        $(document).ready(function() {
            checkWidth();
            var ind = document.cookie.indexOf("xruncalc=");
            var cookieVal = '';
            if (ind != -1) {
                cookieVal = document.cookie.substring(ind + 9);
            }
            checkCookieVal();
            $('#selectAll').button();
            $('#search').button();
			$('#renamePreset').button();
			$('#removePreset').button();
			$('#saveOrder').button();
            $('#search').click(function() {
                fetch();
            });
			$('#savePresets').button();
			$('#savePresets').click(function() {
                $('#presetsDlg').html('Preset name&nbsp;<input type="text" id="newPresetName" />');
				$('#presetsDlg').dialog('option', 'title', 'Save filter preset');
				$('#presetsDlg').dialog('open');
            });
			$('#renamePreset').click(function() {
				renameOps = '<select id="selectPreset">';
				$('.presetButton').each(function() {
					pname = $(this).text();
					renameOps += '<option value="' + pname + '">' + pname + '</option>';
				});
				renameOps += '</select>';
				$('#renamePresetDlg').html('<table><tbody><tr><td>Choose preset</td><td>' + renameOps + '</td></tr><tr><td>New name</td><td><input type="text" id="setPresetName" /></td></tr></tbody></table>');
				$('#renamePresetDlg').dialog('option', 'title', 'Rename filter preset');
				$('#renamePresetDlg').dialog('open');
			});
			$('#saveOrder').click(function() {
				elements = '';
				$("#sortable li").each(function(idx, li) {
					elements += $(li).text() + '|||';
				});
				$.ajax({
                    url: 'savePresetOrder',
                    headers: {
                        'Content-Type': 'application/json',
						'elements': elements
                    },
                    method: 'POST',
                    dataType: 'text',
                    statusCode: {
                        200: function(resp) {
							$('#infoDialog').html(resp);
                            $('#infoDialog').dialog('option', 'title', 'Status');
                            $('#infoDialog').dialog('open');
                        },
						401: function(resp) {
							$('#infoDialog').html('Please sign in!');
                            $('#infoDialog').dialog('option', 'title', 'Not authorized');
                            $('#infoDialog').dialog('open');
						}
                    }
                });
			});
			$('#removePreset').click(function() {
				removeOps = '<select id="selectPresetRem">';
				$('.presetButton').each(function() {
					pname = $(this).text();
					removeOps += '<option value="' + pname + '">' + pname + '</option>';
				});
				removeOps += '</select>';
				$('#removePresetDlg').html('Choose preset ' + removeOps);
				$('#removePresetDlg').dialog('option', 'title', 'Remove filter preset');
				$('#removePresetDlg').dialog('open');
			});
            $('#bestTotalsBtn').button();
            $('#mTotalsBtn').button();
			$('#wTotalsBtn').button();
            $('input[name=selectPeriod]').checkboxradio();
            $('input[name=selectLast]').checkboxradio();
            $('#checkbox-1').checkboxradio();
            $('#checkbox-2').checkboxradio();
            $('#checkbox-3').checkboxradio();
            $('#checkbox-4').checkboxradio();
            $('#checkbox-5').checkboxradio();
            $('#checkbox-6').checkboxradio();
            $('#selectAll').click(function() {
                $("#checkbox-1").prop('checked', true).change();
                $("#checkbox-2").prop('checked', true).change();
                $("#checkbox-3").prop('checked', true).change();
                $("#checkbox-4").prop('checked', true).change();
                $("#checkbox-5").prop('checked', true).change();
                $("#checkbox-6").prop('checked', true).change();
            });
            $("#bestTotalsBtn").click(function() {
                $("#bestSplits").dialog('open');
            });
            $("#mTotalsBtn").click(function() {
                $("#mTotals").dialog('open');
            });
			$("#wTotalsBtn").click(function() {
                $("#wTotals").dialog('open');
            });
            $("#radio-1").change(disableDates);
            $("#radio-2").change(disableDates);
            $("#radio-3").change(disableDates);
            $("#radio-4").change(disableDates);
            $("#radio-5").change(disableDates);
            $("#radio-6").change(disableDates);
            $("#radio-7").change(function() {
                if (this.checked) {
                    $('#dtStart').datepicker('enable');
                    $('#dtEnd').datepicker('enable');
                }
            });
            initDialogs();
            $("#loginButton").click(function() {
                $('#login').html('<table><tbody><tr><td>User </td><td><input type="text" id="loginUser" value="BatGeorgi"/></td></tr>' +
                    '<tr><td>Password </td><td><input type="password" id="loginPassword"/></td></tr></tbody></table>');
                $('#login').dialog('option', 'title', 'Login');
                $('#login').dialog('open');
            });
			$('#createDashboardButton').click(function () {
				$('#createDashboard').html('Dashboard name&nbsp;<input type="text" id="cdName" />');
				$('#createDashboard').dialog('option', 'title', 'Create new dashboard');
				$('#createDashboard').dialog('open');
			});
			$('#renameDashboardButton').click(function () {
				$('#renameDashboard').html('New name&nbsp;<input type="text" id="newDashName" />');
				$('#renameDashboard').dialog('option', 'title', 'Rename dashboard ' + $('#dashboard' + currentDash).attr('name'));
				$('#renameDashboard').dialog('open');
			});
			$('#removeDashboardButton').click(function () {
				crName = $('#dashboard' + currentDash).attr('name');
				$('#removeDashboard').html('Really remove dashboard ' + crName + '?');
				$('#removeDashboard').dialog('option', 'title', 'Remove dashboard ' + $('#dashboard' + currentDash).attr('name'));
				$('#removeDashboard').dialog('open');
			});
            $('#dtStart').datepicker({
                yearRange: '2013:c',
                changeYear: true
            });
            $('#dtEnd').datepicker({
                yearRange: '2013:c',
                changeYear: true
            });
            $('#dtStart').datepicker('disable');
            $('#dtEnd').datepicker('disable');
            initDashboards();
			getPresets();
            fetch();
            $.tablesorter.addWidget({
                id: "numbering",
                format: function(table) {
                    var c = table.config;
                    $("tr:visible", table.tBodies[0]).each(function(i) {
                        $(this).find('td').eq(0).text(i + 1);
                    });
                }
            });
            $("#spinnerMin").spinner();
            $("#spinnerMax").spinner();
            $("#spinnerMin").spinner({
                min: 0
            });
            $("#spinnerMax").spinner({
                min: 0
            });
			$('#hideFilters').click(function() {
				if ($('#filters').css('display') == 'none') {
					$(this).text("Hide Filters");
				} else {
					$(this).text("Show Filters");
				}
				$('#filters').toggle();
			});
            getBest();
            var months = {
                'Jan': 0,
                'Feb': 1,
                'Mar': 2,
                'Apr': 3,
                'May': 4,
                'Jun': 5,
                'Jul': 6,
                'Aug': 7,
                'Sep': 8,
                'Oct': 9,
                'Nov': 10,
                'Dec': 11
            };
            $.tablesorter.addParser({
                id: 'dates',
                is: function(s) {
                    return false;
                },
                format: function(s) {
                    return parseInt(s.substring(7, 11)) * 400 + months[s.substring(3, 6)] * 32 + parseInt(s.substring(0, 2));
                },
                type: 'numeric'
            });
            $.tablesorter.addParser({
                id: 'paces',
                is: function(s) {
                    return false;
                },
                format: function(s) {
                    return parseInt(s.substring(0, s.indexOf(':'))) * 70 + parseInt(s.substring(s.indexOf(':') + 1, s.length));
                },
                type: 'numeric'
            });
            $.tablesorter.addParser({
                id: 'elevs',
                is: function(s) {
                    return false;
                },
                format: function(s) {
                    if (s.charAt(0) != '+') {
                        return 0;
                    }
                    var ind = s.indexOf('/');
                    return parseInt(ind != -1 ? s.substring(1, ind) : s.substring(1, s.length));
                },
                type: 'numeric'
            });
            $('#runs').tablesorter({
                headers: {
                    0: {
                        sorter: false
                    },
                    1: {
                        sorter: 'dates'
                    },
                    3: {
                        sorter: false
                    },
                    6: {
                        sorter: 'paces'
                    },
                    8: {
                        sorter: 'elevs'
                    },
                    9: {
                        sorter: false
                    }
                },
                widgets: ['numbering']
            });
        });
    </script>
	
</head>

<body>
    <div id="heading">
        <H1><strong>Activity Tracker 2.72</strong></H1>
		<hr>
    </div>
	<div id="controls">
		<a href="upload"><input id="importButton" type="image" src="button-dark-plus-icon.png" width="40" height="40" /></a>
		<input id="rescanButton" type="image" src="button_blue_rescan.png" width="40" height="40" />
		<button id="loginButton" class="controlButton">Login</button>
		<button id="hideFilters" class="controlButton">Show Filters</button>
		<button id="createDashboardButton" class="controlButton">New dashboard</button>
		<button id="renameDashboardButton" class="controlButton">Rename dashboard</button>
		<button id="removeDashboardButton" class="controlButton">Remove dashboard</button>
	</div><p><p><p><p>
	<div id="createDashboard"></div>
	<div id="renameDashboard"></div>
	<div id="removeDashboard"></div>
	<div id="userData">
	<div id="mainBar">
    <div id="filters" style="display:none">
        <fieldset>
            <legend class="legend-cap">Activity Type</legend>
            <label for="checkbox-1">Running</label>
            <input type="checkbox" name="checkbox-1" id="checkbox-1" checked/>
            <label for="checkbox-2">Trail</label>
            <input type="checkbox" name="checkbox-2" id="checkbox-2" checked/>
            <label for="checkbox-3">Uphill</label>
            <input type="checkbox" name="checkbox-3" id="checkbox-3" checked/>
            <label for="checkbox-4">Hiking</label>
            <input type="checkbox" name="checkbox-4" id="checkbox-4" checked/>
            <label for="checkbox-5">Walking</label>
            <input type="checkbox" name="checkbox-5" id="checkbox-5" />
            <label for="checkbox-6">Other</label>
            <input type="checkbox" name="checkbox-6" id="checkbox-6" />
            <button id="selectAll">Select All</button>
        </fieldset>
        <p>
            <fieldset>
                <legend class="legend-cap">Activity name</legend>
                <input type="text" name="searchName" id="searchName" />
            </fieldset>
            <p>
                <fieldset>
                    <legend class="legend-cap">Period</legend>
                    <label for="radio-1">This month</label>
                    <input type="radio" name="selectPeriod" id="radio-1">
                    <label for="radio-2">This year</label>
                    <input type="radio" name="selectPeriod" id="radio-2">
                    <label for="radio-3">Last 30 days</label>
                    <input type="radio" name="selectPeriod" id="radio-3">
                    <label for="radio-4">Last 3 months</label>
                    <input type="radio" name="selectPeriod" id="radio-4">
                    <label for="radio-5">Last 365 days</label>
                    <input type="radio" name="selectPeriod" id="radio-5">
                    <label for="radio-6">From begining</label>
                    <input type="radio" name="selectPeriod" id="radio-6" checked>
                    <label for="radio-7">Custom</label>
                    <input type="radio" name="selectPeriod" id="radio-7">
                </fieldset>
                <p>
                    <div id="customDates">
                        <p>Start date: <input type="text" id="dtStart" />
                            <p>End date: <input type="text" id="dtEnd" />
                    </div>
                    <p>
                        <fieldset>
                            <legend class="legend-cap">Distance</legend>
                            <label for="spinnerMin">Min km</label>
                            <input id="spinnerMin" name="dmin" />
                            <label for="spinnerMax">Max km</label>
                            <input id="spinnerMax" name="dmax" />
                        </fieldset>
                        <p>
                            <fieldset>
                                <legend class="legend-cap">Most recent activities(in period)</legend>
                                <label for="l-10">Last 10</label>
                                <input type="radio" name="selectLast" id="l-10" cap="10">
                                <label for="l-20">Last 20</label>
                                <input type="radio" name="selectLast" id="l-20" cap="20">
                                <label for="l-50">Last 50</label>
                                <input type="radio" name="selectLast" id="l-50" cap="50">
                                <label for="l-100">Last 100</label>
                                <input type="radio" name="selectLast" id="l-100" cap="100">
                                <label for="l-inf">All</label>
                                <input type="radio" name="selectLast" id="l-inf" cap="-1" checked>
                            </fieldset>
                            <p>
								<button id="savePresets">Save preset</button>
                                <button id="search">Search</button>
    </div>
	<div id="dashboards">
            <div id="dashHeading">Dashboards</div><p>
            <div id="allDash"></div>
    </div>
	<p>
	<div id="presets">
		<div id="presetHeading">Filter presets</div><p>
		<button id="renamePreset">Rename preset</button>
		<button id="removePreset">Remove preset</button>
		<button id="saveOrder">Save order</button>
        <div id="allPresets"></div>
		<div id="presetsDlg"></div>
		<div id="renamePresetDlg"></div>
		<div id="removePresetDlg"></div>
	</div>
    <div id="activities">
		
		<h2>
            <div id="ht">Fetching activities...</div>
        </h2>
        <table class="tablesorter highlight" id="runs" cellspacing="0" summary="Running and hiking activities" style="display:none">
            <thead>
                <tr>
                    <th>#</th>
                    <th>Date</th>
                    <th>Name</th>
                    <th>Type</th>
                    <th>Distance&nbsp;&nbsp;</th>
                    <th>Time</th>
                    <th>Pace&nbsp;&nbsp;</th>
                    <th>Speed&nbsp;&nbsp;</th>
                    <th>Elevation est.</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody />
        </table>
    </div>
	</div>
	<div id="sideBar">
		<button id="mTotalsBtn">Monthly totals</button>
		<button id="wTotalsBtn">Weekly totals</button>
		<button id="bestTotalsBtn">Best split times</button>
		<div id="overallWrap">
            <div id="titleTotals">
                <h2>Totals</h2>
            </div>
            <table id="overall">
                <tbody></tbody>
            </table>
        </div>
		<div id="bestOfWrap">
            <div id="titleBest">
                <h2>Best</h2>
            </div>
            <table id="bestOf">
                <tbody></tbody>
            </table>
        </div>
	</div>
	</div>
    <div id="editable"></div>
    <div id="removable"></div>
    <div id="details"></div>
    <div id="bestSplits"></div>
    <div id="mTotals"></div>
	<div id="wTotals"></div>
    <div id="dataHolder" />
    <div id="comparable">
        <div id="compareResults" />
    </div>
    <div id="infoDialog"></div>
    <div id="login" />
</body>

</html>